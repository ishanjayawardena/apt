#!/bin/sh
set -e

TESTDIR=$(readlink -f $(dirname $0))
. $TESTDIR/framework

setupenvironment
configarchitecture "i386"

# mock
requires_root() {
    return 0
}

# ensure this works in our tempdir
mkdir -p ./usr/share/keyrings/ ./etc/apt
MASTER_KEYRING=./usr/share/keyrings/mock-master-keyring.gpg
ARCHIVE_KEYRING=./usr/share/keyrings/mock-archive-keyring.gpg
ARCHIVE_KEYRING_URI=http://localhost:8080/mock-archive-keyring.gpg.sig

DOWNLOAD_KEYRING_DIR=./var/lib/apt/keyrings
GPG_CMD="gpg --ignore-time-conflict --no-options --no-default-keyring"

TRUSTEDFILE="./etc/apt/trusted.gpg"
touch $TRUSTEDFILE
GPG="$GPG_CMD --keyring $TRUSTEDFILE"

# extract net_update() and import it
func=$( sed -n -e '/^net_update/,/^}/p' ${BUILDDIRECTORY}/apt-key )
eval "$func"

# start server
changetowebserver

# create empty archive keyring
echo > $ARCHIVE_KEYRING
# copy fake master keyring
cp keys/fake-master-key.pub $MASTER_KEYRING

############################################### test incorrect signature


# create incorrectly signed keyring
gpg --no-default-keyring --keyring ./keys/marvinparanoid.pub --secret-keyring ./keys/marvinparanoid.sec  --output joesixpack.pub.sig --sign ./keys/joesixpack.pub
# put updated archive keyring on the local server and server it over http
mv joesixpack.pub.sig aptarchive/mock-archive-keyring.gpg.sig

size=$(stat -c %s $TRUSTEDFILE)
testequal "0" echo "$size"

testfilenotexists "$DOWNLOAD_KEYRING_DIR/$(basename $ARCHIVE_KEYRING)"

# run it (in a subshell, exit 1 is called in net_update)
(
 net_update
) || true

# ensure nothing was imported 
size=$(stat -c %s $TRUSTEDFILE)
testequal "0" echo "$size"
# ensure the file was not unpacked
testfilenotexists "$DOWNLOAD_KEYRING_DIR/$(basename $ARCHIVE_KEYRING)"

############################################### test good signature

# create new signed keyring for the net-update feature testing
gpg --no-default-keyring --keyring ./keys/fake-master-key.pub --secret-keyring ./keys/fake-master-key.sec  --output joesixpack.pub.sig --sign ./keys/joesixpack.pub
# put updated archive keyring on the local server and server it over http
mv joesixpack.pub.sig aptarchive/mock-archive-keyring.gpg.sig

size=$(stat -c %s $TRUSTEDFILE)
testequal "0" echo "$size"

# run it
net_update 

size=$(stat -c %s $TRUSTEDFILE)
size=$(stat -c %s $TRUSTEDFILE)
testequal "643" echo "$size"

testfileexists "$DOWNLOAD_KEYRING_DIR/$(basename $ARCHIVE_KEYRING)"